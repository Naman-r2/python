import ctypes


class CustomList:
    def __init__(self):
        initial_capacity = 1
        self.capacity = initial_capacity
        self.size = 0
        self.array = self.create_array(self.capacity)

    def create_array(self, capacity):
        return (capacity * ctypes.py_object)()

    def resize(self, new_capacity):
        new_array = self.create_array(new_capacity)
        for i in range(self.size):
            new_array[i] = self.array[i]
        self.array = new_array
        self.capacity = new_capacity

    def append(self, item):
        if self.size == self.capacity:
            self.resize(2 * self.capacity)
        self.array[self.size] = item
        self.size += 1

    def __len__(self):
        return self.size

    def __str__(self):
        output = ''
        for i in range(self.size):
            output += str(self.array[i]) + ','
        return '[' + output[:-1] + ']'

    def pop(self):
        if self.size == 0:
            print('IndexError: empty list')
            return None
        popped_item = self.array[self.size - 1]
        self.size -= 1
        return popped_item

    def get_item(self, index):
        if 0 <= index < self.size:
            return self.array[index]
        else:
            return "Invalid index"

    def clear(self):
        self.size = 0

    def insert(self, position, element):
        if 0 <= position <= self.size:
            if self.size == self.capacity:
                self.resize(2 * self.capacity)
            for i in range(self.size, position, -1):
                self.array[i] = self.array[i - 1]
            self.array[position] = element
            self.size += 1
        else:
            print("Invalid index")

    def sort(self):
        for i in range(1, self.size):
            t = self.array[i]
            j = i - 1
            while j >= 0:
                if self.array[j] > t:
                    self.array[j + 1] = self.array[j]
                else:
                    break
                j -= 1
            self.array[j + 1] = t
        return self.array

    def search(self, item):
        self.sort()
        s = 0
        e = self.size - 1

        while s <= e:
            mid = (s + e) // 2
            if self.array[mid] > item:
                e = mid - 1
            elif self.array[mid] < item:
                s = mid + 1
            else:
                return mid
        return -1

    def remove(self, item):
        position = self.search(item)
        if position != -1:
            for i in range(position, self.size - 1):
                self.array[i] = self.array[i + 1]
            self.size -= 1
        else:
            print("Item not found")


# Example usage
if __name__ == "__main__":
    l1 = CustomList()
    l1.append(1)
    l1.append(2)
    l1.insert(1, 8)
    print(l1)
    l1.remove(8)
    print(l1)
